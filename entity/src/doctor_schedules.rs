//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "doctor_schedules")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub doctor_id: i32,
    pub polyclinic_id: i32,
    pub room_code: String,
    pub day_of_week: String,
    pub start_time: Time,
    pub end_time: Time,
    pub status: String,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::doctors::Entity",
        from = "Column::DoctorId",
        to = "super::doctors::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Doctors,
    #[sea_orm(
        belongs_to = "super::polyclinic::Entity",
        from = "Column::PolyclinicId",
        to = "super::polyclinic::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Polyclinic,
}

impl Related<super::doctors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Doctors.def()
    }
}

impl Related<super::polyclinic::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Polyclinic.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
