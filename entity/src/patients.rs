//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "patients")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub name: String,
    pub date_of_birth: Date,
    #[sea_orm(unique)]
    pub national_id: String,
    #[sea_orm(unique)]
    pub bpjs_number: Option<String>,
    pub gender: String,
    pub emergency_contact_name: String,
    pub emergency_contact_phone: String,
    pub emergency_contact_relationship: String,
    pub blood_type: String,
    pub known_allergies: Option<String>,
    pub created_at: DateTime,
    pub updated_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::patients_visit_intent::Entity")]
    PatientsVisitIntent,
    #[sea_orm(has_many = "super::referral_documents::Entity")]
    ReferralDocuments,
}

impl Related<super::patients_visit_intent::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PatientsVisitIntent.def()
    }
}

impl Related<super::referral_documents::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::ReferralDocuments.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
