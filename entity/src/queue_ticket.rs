//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "queue_ticket")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub visit_intent_id: i32,
    pub queue_number: i32,
    pub queue_type: String,
    pub status: String,
    pub called_at: Option<DateTime>,
    pub done_at: Option<DateTime>,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::patients_visit_intent::Entity",
        from = "Column::VisitIntentId",
        to = "super::patients_visit_intent::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    PatientsVisitIntent,
}

impl Related<super::patients_visit_intent::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PatientsVisitIntent.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
