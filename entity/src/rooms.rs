//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.11

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "rooms")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub code: String,
    pub room_type: String,
    pub status: String,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::doctors::Entity")]
    Doctors,
    #[sea_orm(has_many = "super::polyclinic::Entity")]
    Polyclinic,
}

impl Related<super::doctors::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Doctors.def()
    }
}

impl Related<super::polyclinic::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Polyclinic.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
